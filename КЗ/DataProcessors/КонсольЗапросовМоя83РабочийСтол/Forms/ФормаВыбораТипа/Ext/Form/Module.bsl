
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Тип("СправочникСсылка.День")
	//Тип("ДокументСсылка.ТестВыбора")
	//Тип("ПеречислениеСсылка.ВидыФайлов")
	//Тип("ПланВидовХарактеристикСсылка.ПланВидовХарактеристик1")
	//Тип("ПланСчетовСсылка.ПланСчетов1")
	//Тип("ПланВидовРасчетаСсылка.ПланВидовРасчета1")
	
	СписокОбъектов = Новый Массив;
	СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "Справочник", "Справочники","СправочникСсылка"));
	СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "Документ", "Документы","ДокументСсылка"));
	СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "", "Перечисления","ПеречислениеСсылка"));
	СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "ПланВидовХарактеристик", "ПланыВидовХарактеристик","ПланВидовХарактеристикСсылка"));
	СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "ПланСчетов", "ПланыСчетов","ПланСчетовСсылка"));
	СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "ПланВидовРасчета", "ПланыВидовРасчета","ПланВидовРасчетаСсылка"));
	СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "ПланОбмена", "ПланыОбмена","ПланОбменаСсылка"));
	
	Если Параметры.Свойство("Регистры") И Параметры.Регистры = Истина тогда
		СписокОбъектов = Новый Массив;
		СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "РегистрСведений", "РегистрыСведений",Неопределено));
		СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "РегистрНакопления", "РегистрыНакопления",Неопределено));
		СписокОбъектов.Добавить(Новый Структура("МетаданныеМенеджер,ИмяТаблицы,ИмяМенеджера,Префикс", Неопределено, "РегистрБухгалтерии", "РегистрыБухгалтерии",Неопределено));
	КонецЕсли;
	
	
	Для каждого ОписаниеОб из СписокОбъектов цикл
		ОписаниеОб.МетаданныеМенеджер = Метаданные[ОписаниеОб.ИмяМенеджера];	
	КонецЦикла;
	
	#Область УбираюНенужныеМенеджеры
	
	Если Параметры.ОтобратьПоИмениМенеджера <> Неопределено тогда
		
		Если Тип("Строка") = ТипЗнч(Параметры.ОтобратьПоИмениМенеджера) тогда
			ОтобратьОбъекты = Новый Массив;
			ОтобратьОбъекты.Добавить(Параметры.ОтобратьПоИмениМенеджера);
		ИначеЕсли Тип("Массив") = ТипЗнч(Параметры.ОтобратьПоИмениМенеджера) тогда
			ОтобратьОбъекты = Параметры.ОтобратьПоИмениМенеджера;	
		Иначе
			ВызватьИсключение "Параметр -ОтобратьПоИмениМенеджера- может быть строкой или массивом.";	
		КонецЕсли;
		
		Пока Истина цикл
			
			ВсеЛишнееУдалено = Истина;
			
			Для счетчик = 0 по СписокОбъектов.Количество() -1 цикл 
				ТекОб = СписокОбъектов[Счетчик];
				Если ОтобратьОбъекты.Найти(ТекОб.ИмяМенеджера) = Неопределено тогда
					ВсеЛишнееУдалено = Ложь;
					СписокОбъектов.Удалить(Счетчик);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ВсеЛишнееУдалено тогда
				Прервать;
			КонецЕсли; 
			
		КонецЦикла; 
		
	КонецЕсли;
	
	#КонецОбласти //УбираюНенужныеМенеджеры
	
	Тз = Новый таблицаЗначений;
	Тз.Колонки.Добавить("Группа",Новый ОписаниеТипов("Строка"));
	Тз.Колонки.Добавить("ИмяТаблицы",Новый ОписаниеТипов("Строка"));
	Тз.Колонки.Добавить("Имя",Новый ОписаниеТипов("Строка"));
	Тз.Колонки.Добавить("Псевдоним",Новый ОписаниеТипов("Строка"));
	Тз.Колонки.Добавить("Порядок",Новый ОписаниеТипов("Число")); 
	Тз.Колонки.Добавить("ВыборНесколькихТипов",Новый ОписаниеТипов("Булево"));
	
	Для счетчик = 0 по СписокОбъектов.Количество()-1 цикл
		ОбъектВывода = СписокОбъектов[счетчик]; 
		Для каждого МетаОбъект из ОбъектВывода.МетаданныеМенеджер цикл			
			СтрТЗ = Тз.Добавить();
			СтрТЗ.Группа = ОбъектВывода.Префикс;  
			СтрТЗ.ИмяТаблицы = ОбъектВывода.ИмяТаблицы;
			СтрТЗ.Имя = МетаОбъект.Имя;
			СтрТЗ.Псевдоним = МетаОбъект.Синоним;
			СтрТЗ.Порядок = счетчик;
		КонецЦикла;
	КонецЦикла; 
	
	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СКД_ВыводТипов");
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, СхемаКомпоновкиДанных.НастройкиПоУмолчанию, ДанныеРасшифровки);
	
	ВнешнийНаборДанных = Новый Структура("ТЗ", ТЗ);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки,Истина);
	
	АдресРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки,ЭтаФорма.УникальныйИдентификатор);
	
	рфРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(рфРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных); 
	
	КолонкаФлажок = 3;
	Для счетчик = 1 по рфРезультат.ВысотаТаблицы цикл
		ОбластьФлаг = рфРезультат.Область(счетчик,КолонкаФлажок);
		Если ОбластьФлаг.Расшифровка = Неопределено тогда
			Продолжить;
		КонецЕсли;
		Поля = ДанныеРасшифровки.Элементы.Получить(ОбластьФлаг.Расшифровка).ПолучитьПоля();  
		ФлагВыборТипов = Поля.Найти("ВыборНесколькихТипов");
		Если ФлагВыборТипов<>Неопределено тогда
			ОбластьФлаг.Защита = Ложь;
			ОбластьФлаг.СодержитЗначение = Истина;
			ОбластьФлаг.ТипЗначения = Новый ОписаниеТипов("Булево");
			ОбластьФлаг.Значение = Ложь;
			ОбластьФлаг.УстановитьЭлементУправления(Тип("ПолеФлажкаФормы"));			
		КонецЕсли;
		а=4;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура рфРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)     
	СтандартнаяОбработка = Ложь;
	ДанныеОТипе = ПолучитьИмяТипа(Расшифровка); 
	Если ДанныеОТипе <> Неопределено тогда
		ИмяТипа = ДанныеОТипе.ПолноеИмяТипа; 
		ИменаТипов = Новый Массив();
		ИменаТипов.Добавить(ИмяТипа);
		ОповеститьОВыборе(Новый Структура("ИменаТипов,ЭтоНуженСписокЗначений,ИмяТаблицы", ИменаТипов, ЭтоНуженСписокЗначений, ДанныеОТипе.ИмяТаблицы));       
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьИмяТипа(Расшифровка)
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресРасшифровки);
	ВыбранныйОб = ДанныеРасшифровки.Элементы.Получить(Расшифровка);
	ЗначенияПолейРасшифровкиКомпоновкиДанных = ВыбранныйОб.ПолучитьПоля();
	ПолеИмя = ЗначенияПолейРасшифровкиКомпоновкиДанных.Найти("Имя");
	ПолеГруппа = ЗначенияПолейРасшифровкиКомпоновкиДанных.Найти("Группа");
	ПолеИмяТаблицы = ЗначенияПолейРасшифровкиКомпоновкиДанных.Найти("ИмяТаблицы");
	Если ПолеИмя <> Неопределено И ПолеГруппа<>Неопределено тогда
		ДанныеОТипе = Новый Структура("ПолноеИмяТипа,ИмяТаблицы"); 
		ДанныеОТипе.ПолноеИмяТипа = ПолеГруппа.Значение+"."+ПолеИмя.Значение;
		ДанныеОТипе.ИмяТаблицы = ?(ПолеИмяТаблицы=Неопределено,"",ПолеИмяТаблицы.Значение);
		Возврат ДанныеОТипе;		
	КонецЕсли;         
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура рфРезультатПриИзмененииСодержимогоОбласти(Элемент, Область, ДополнительныеПараметры)
	Если Область.Расшифровка <> Неопределено тогда
		ОбработкаРасшифровкиВыбораНесколькихТипов(Область.Имя);	
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаРасшифровкиВыбораНесколькихТипов(ИмяОбласти)
	
	Область = рфРезультат.Область(ИмяОбласти);
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресРасшифровки);
	ВыбранныйОб = ДанныеРасшифровки.Элементы.Получить(Область.Расшифровка);
	ЗначенияПолейРасшифровкиКомпоновкиДанных = ВыбранныйОб.ПолучитьПоля();
	РасшВыборНесколькихТипов = ЗначенияПолейРасшифровкиКомпоновкиДанных.Найти("ВыборНесколькихТипов");
	ЗначениеИмя = ЗначенияПолейРасшифровкиКомпоновкиДанных.Найти("Имя").Значение;
	ЗначениеГруппа = ЗначенияПолейРасшифровкиКомпоновкиДанных.Найти("Группа").Значение;   
	ИмяТипа = ЗначениеГруппа+"."+ЗначениеИмя;     
	
	ЭлемСписка = рфСписокТипов.НайтиПоЗначению(ИмяТипа);
	Если Область.Значение тогда              
		Если ЭлемСписка = Неопределено тогда
			рфСписокТипов.Добавить(ИмяТипа,ЗначениеИмя);
			Область.ЦветФона = WebЦвета.БледноЗеленый;
		КонецЕсли;
	Иначе
		Если ЭлемСписка <> Неопределено тогда
			рфСписокТипов.Удалить(ЭлемСписка);
			Область.ЦветФона = Новый Цвет();
		КонецЕсли;
	КонецЕсли;
	
	ЭтоНуженСписокЗначений = (рфСписокТипов.Количество()>1);
	
КонецПроцедуры  

&НаКлиенте
Процедура ВыбратьТипы(Команда)
	Если рфСписокТипов.Количество() = 0 тогда
		Сообщить("Не выбраны типы.");		
		Возврат;
	КонецЕсли;         
	ИменаТипов = рфСписокТипов.ВыгрузитьЗначения();
	ОповеститьОВыборе(Новый Структура("ИменаТипов,ЭтоНуженСписокЗначений,ИмяТаблицы", ИменаТипов, ЭтоНуженСписокЗначений, "")); 
КонецПроцедуры










